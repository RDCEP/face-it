#cloud-config

apt_update: true
packages:
#Condor
 - libssl0.9.8
 - libvirt0
#NFS
 - autofs
#Galaxy
 - gnuplot
 - liblist-moreutils-perl
 - libemail-valid-perl
 - libwww-mechanize-perl
 - libtie-ixhash-perl
 - libdbi-perl
 - libdbd-sqlite3-perl
 - openjdk-6-jre
 - python-markupsafe
 - python-numpy
 - r-base
 - ruby1.9.1
 - samtools
 - unzip
 - zip
#Useful tools
 - mc
runcmd:
 - [ easy_install-2.6, globusonline_transfer_api_client ]
 - [ umount, /mnt ]
 - [ mkdir, -p, /ephemeral/0 ]
 - [ mount, /dev/xvdb, /ephemeral/0 ]
 - [ cp, -pr, /tmp, /ephemeral/0 ]
 - [ rm, -rf, /tmp ]
 - [ ln, -s, /ephemeral/0/tmp, /tmp ]
# Set hostname (a domainname portion is used by NFS idmapd)
 - echo '#!/bin/bash' > /opt/hostname.sh
 - echo 'hostname `ec2metadata --public-hostname`' >> /opt/hostname.sh
 - [ bash, /opt/hostname.sh ]
# Configure NFS and mount remote filesystems
 - [ mkdir, -p, /nfs/home ]
 - [ mkdir, -p, /nfs/software ]
 - [ mkdir, -p, /mnt/galaxyTools ]
 - [ mkdir, -p, /mnt/galaxyIndices ]
 - [ mkdir, -p, /scratch/dev ]
 - echo 'NEED_STATD=no\nNEED_IDMAPD=yes' > /etc/default/nfs-common
 - echo '/- /etc/auto.nfs' >> /etc/auto.master
 - echo '/nfs/home -fstype=nfs4 10.140.7.53:/nfs/home' >> /etc/auto.nfs
 - echo '/nfs/software -fstype=nfs4 10.140.7.53:/nfs/software' >> /etc/auto.nfs
 - echo '/nfs/software/local -fstype=nfs4 10.140.7.53:/nfs/software/local' >> /etc/auto.nfs
 - echo '/mnt/galaxyTools -fstype=nfs4 10.140.7.53:/mnt/galaxyTools' >> /etc/auto.nfs
 - echo '/mnt/galaxyIndices -fstype=nfs4 10.140.7.53:/mnt/galaxyIndices' >> /etc/auto.nfs
 - echo '/scratch/dev -fstype=nfs4 10.140.7.53:/scratch/dev' >> /etc/auto.nfs
 - echo '/scratch/st -fstype=nfs4 10.140.7.53:/scratch/st' >> /etc/auto.nfs
 - [ service, idmapd, restart ]
 - [ service, autofs, restart ]
# Increase both hard and soft on open files
 - echo '* - nofile 65000' >> /etc/security/limits.conf
# Add the galaxy user used to run all jobs
 - [ addgroup, --gid, 4000, galaxy ]
 - [ adduser, --home, /nfs/home/galaxy, --no-create-home, --uid, 4000, --ingroup, galaxy, --disabled-password, --gecos, '', galaxy ]
 - echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDELoRtoy69cnqvMWTpHN90FsHpD/ET5jBx9BpVhgYPeolTDKyZsQBXKpX5HYCF1yWzmgbKM5iuJ8FZwmmqOACQBb/ylzZ3sCbOybs7r3N7c6YL2+hmR+y0uhzq7NIqO90EKdIPYz7BSzCfEiRKkvGPgIBSNHr1+bFH+mrQ0g6bb2uBE7eFLGvxLn7b3Oaadl2CVOgSSP4HYWp1lA2Enj3n3LSMcMtqQtigZlX/uxeTQAxqCi6vwLQTXxeNPaYfxlnnHSdRlc0z3JvBbVmOEFE5s2sBjvWOE3+F9EzMgv4QmhUlM10Z8JiGip3sM8FpnH/p+HNGW1zLue77GLWBhJJ5 galaxy@dev.globusgenomics.org' >> /home/ubuntu/.ssh/authorized_keys
# Configure  Condor
 - [ wget, 'http://research.cs.wisc.edu/htcondor/debian/stable/dists/squeeze/contrib/binary-amd64/condor-7.8.8-110288-deb_6.0_amd64.deb' ]
 - [ dpkg, -i, 'condor-7.8.8-110288-deb_6.0_amd64.deb' ]
 - echo '10.140.7.53 ec2-54-226-79-122.compute-1.amazonaws.com  headnode' >> /etc/hosts
 - [ mkdir, /ephemeral/0/condor ]
 - [ chown, 'condor:condor', /ephemeral/0/condor ]
 - echo 'CONDOR_HOST = ec2-54-226-79-122.compute-1.amazonaws.com' > /etc/condor/condor_config.local
 - echo 'UID_DOMAIN = compute-1.amazonaws.com' >> /etc/condor/condor_config.local
 - echo 'FILESYSTEM_DOMAIN = compute-1.amazonaws.com' >> /etc/condor/condor_config.local
 - echo 'COLLECTOR_NAME = DemoGrid Condor Pool' >> /etc/condor/condor_config.local
 - echo 'START = TRUE' >> /etc/condor/condor_config.local
 - echo 'SUSPEND = FALSE' >> /etc/condor/condor_config.local
 - echo 'PREEMPT = FALSE' >> /etc/condor/condor_config.local
 - echo 'KILL = FALSE' >> /etc/condor/condor_config.local
 - echo 'DAEMON_LIST = MASTER, STARTD' >> /etc/condor/condor_config.local
 - echo 'ALLOW_READ = *.compute-1.amazonaws.com, 10.*, 127.0.*' >> /etc/condor/condor_config.local
 - echo 'ALLOW_WRITE = *.compute-1.amazonaws.com, 10.*, 127.0.*' >> /etc/condor/condor_config.local
 - echo 'EXECUTE = /ephemeral/0/condor' >> /etc/condor/condor_config.local
 - echo 'SLOT_TYPE_1 = cpus=32' >> /etc/condor/condor_config.local
 - echo 'NUM_SLOTS_TYPE_1 = 1' >> /etc/condor/condor_config.local
 - echo 'SLOT_TYPE_1_PARTITIONABLE = true' >> /etc/condor/condor_config.local
 - echo 'START = (Tenant =?= "ci")' >> /etc/condor/condor_config.local
 - echo 'ulimit -n 65000' > /opt/restart_condor.sh
 - echo 'service condor restart' >> /opt/restart_condor.sh
 - [ bash, /opt/restart_condor.sh ]
# Configure self-termination
 - echo '#!/bin/bash' > /opt/monitor_instance.sh
 - echo 't=/tmp/ec2_running_seconds' >> /opt/monitor_instance.sh
 - echo 'if [[ ! -f $t ]]; then' >> /opt/monitor_instance.sh
 - echo '    if ! wget -q -O $t http://169.254.169.254/latest/meta-data/local-ipv4; then' >> /opt/monitor_instance.sh
 - echo '        /sbin/shutdown -h now' >> /opt/monitor_instance.sh
 - echo '        exit 0' >> /opt/monitor_instance.sh
 - echo '    fi' >> /opt/monitor_instance.sh
 - echo 'fi' >> /opt/monitor_instance.sh
 - echo 'let running_secs=$((`date +%s`-`date -r $t +%s`))' >> /opt/monitor_instance.sh
 - echo 'let minutes_left=60-running_secs%3600/60' >> /opt/monitor_instance.sh
 - echo 'if [[ $minutes_left -gt 2 ]]; then' >> /opt/monitor_instance.sh
 - echo '    exit 0' >> /opt/monitor_instance.sh
 - echo 'fi' >> /opt/monitor_instance.sh
 - echo 'hostname=`ec2metadata --local-hostname`' >> /opt/monitor_instance.sh
 - echo 'claimed=`condor_status -claimed -direct $hostname`' >> /opt/monitor_instance.sh
 - echo 'if [[ -z $claimed ]]; then' >> /opt/monitor_instance.sh
 - echo '    /sbin/shutdown -h now' >> /opt/monitor_instance.sh
 - echo 'fi' >> /opt/monitor_instance.sh
 - [ chmod, 755, /opt/monitor_instance.sh ]
 - echo '* * * * * root /opt/monitor_instance.sh' > /etc/cron.d/monitor_instance

